// Mocks generated by Mockito 5.4.5 from annotations
// in bggapi/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:bggapi/src/core/data/bgg_collection_api.dart' as _i2;
import 'package:bggapi/src/core/data/bgg_search_api.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BggCollectionApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockBggCollectionApi extends _i1.Mock implements _i2.BggCollectionApi {
  MockBggCollectionApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> fetchCollection({
    required String? userName,
    bool? own = false,
    bool? wishlist = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCollection, [], {
              #userName: userName,
              #own: own,
              #wishlist: wishlist,
            }),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#fetchCollection, [], {
                  #userName: userName,
                  #own: own,
                  #wishlist: wishlist,
                }),
              ),
            ),
          )
          as _i3.Future<String>);
}

/// A class which mocks [BggSearchApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockBggSearchApi extends _i1.Mock implements _i5.BggSearchApi {
  MockBggSearchApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> fetchSearch({required String? query, String? type}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSearch, [], {#query: query, #type: type}),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#fetchSearch, [], {
                  #query: query,
                  #type: type,
                }),
              ),
            ),
          )
          as _i3.Future<String>);
}
